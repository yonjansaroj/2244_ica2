pipeline {
    agent any
    environment {
        IMAGE_TAG = ''
    }
    stages {
        stage('Set IMAGE_TAG') {
            steps {
                script {
                    // Generate a unique tag using the branch name and build ID
                    env.IMAGE_TAG = "${env.GIT_BRANCH.replaceFirst('^origin/', '')}-${env.BUILD_ID}"
                }
            }
        }

        stage('Cleanup') {
            steps {
                // Clean the workspace before starting the build
                cleanWs()
            }
        }

        stage('Clone Git Repo') {
            steps {
                // Check out the source code from the configured SCM
                checkout scm
            }
        }

        stage('Build and Run Docker') {
            steps {
                sh '''
                    echo "Starting Docker operations..."
                    
                    # Stop and remove the container if it already exists
                    if docker ps -a --format '{{.Names}}' | grep -q "^temp_container$"; then
                        docker stop temp_container
                        docker rm temp_container
                    else
                        echo "Container temp_container does not exist, skipping removal."
                    fi

                    # Build the Docker image
                    docker build -t yonjan/static-website .

                    # Run the Docker container
                    docker run -d -p 8081:80 --name temp_container yonjan/static-website

                    # Test the running container
                    curl -I localhost:8081
                '''
            }
        }

        stage('Build and Push') {
            steps {
                echo 'Building and pushing Docker image...'
                withCredentials([usernamePassword(credentialsId: 'dockerhub-credentials', passwordVariable: 'PASSWORD', usernameVariable: 'USERNAME')]) {
                    sh '''
                        echo "Logging in to DockerHub..."
                        docker login -u ${USERNAME} -p ${PASSWORD}
                        echo "Docker login successful!"

                        echo "Tagging the Docker image..."
                        docker tag yonjan/static-website yonjan/static-website:${IMAGE_TAG}
                        
                        echo "Pushing the Docker image with tag ${IMAGE_TAG}..."
                        docker push yonjan/static-website:${IMAGE_TAG}
                    '''
                }
            }
        }

        stage('Image push completed') {
            steps {
                echo 'Docker image build and push completed.'
            }
        }
    }
}

